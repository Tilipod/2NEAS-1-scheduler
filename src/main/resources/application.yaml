spring:
  application:
    name: scheduler
  datasource:
    url: jdbc:postgresql://${PG_HOST:localhost}:${PG_PORT:55010}/${DB_NAME:2neas-1}
    driver-class-name: org.postgresql.Driver
    username: ${PG_USERNAME:postgres}
    password: ${PG_PASSWORD:postgres}
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    show-sql: false
  liquibase:
    change-log: classpath:db-migrations/changelog.xml
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:55001}
    virtual-host: ${RABBITMQ_VHOST:/}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 3s
          max-attempts: 2
          max-interval: 10s
          multiplier: 2

server:
  port: ${PORT:50003}

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:50001/eureka/}

quartz:
  enabled: true

scheduler:
  jobDetails:
    - name: CreatedTaskSendToParserJob
      group: PARSER
      description: Отправляет задачи на анализ в парсер
      jobClass: ru.tilipod.quartz.job.CreatedTaskSendToParserJob
      jobDataMap:
        - pageSize: 20
      triggers:
        - name: CreatedTaskSendToParserJobCronTrigger
          triggerType: CRON
          cronExpression: "0 * * ? * *"
          startTime:
          priority: 1
          startDelay: 0
    - name: AnalysisTaskAgainSendToParserJob
      group: PARSER
      description: Отправляет задачи на повторный анализ в парсер
      jobClass: ru.tilipod.quartz.job.AnalysisTaskAgainSendToParserJob
      jobDataMap:
        - pageSize: 20
      triggers:
        - name: AnalysisTaskAgainSendToParserJobCronTrigger
          triggerType: CRON
          cronExpression: "0 * * ? * *"
          startTime:
          priority: 1
          startDelay: 0
    - name: AnalyzedTaskSendToDistributorJob
      group: DISTRIBUTOR
      description: Отправляет задачи на выгрузку датасетов в дистрибьютор
      jobClass: ru.tilipod.quartz.job.AnalyzedTaskSendToDistributorJob
      jobDataMap:
        - pageSize: 20
      triggers:
        - name: AnalyzedTaskSendToDistributorJobCronTrigger
          triggerType: CRON
          cronExpression: "0 * * ? * *"
          startTime:
          priority: 1
          startDelay: 0
    - name: DistributingTaskAgainSendToDistributorJob
      group: DISTRIBUTOR
      description: Отправляет задачи на повторную выгрузку датасетов в дистрибьютор
      jobClass: ru.tilipod.quartz.job.DistributingTaskAgainSendToDistributorJob
      jobDataMap:
        - pageSize: 20
      triggers:
        - name: DistributingTaskAgainSendToDistributorJobCronTrigger
          triggerType: CRON
          cronExpression: "0 * * ? * *"
          startTime:
          priority: 1
          startDelay: 0
    - name: DistributedTaskSendToTeacherJob
      group: TEACHER
      description: Отправляет задачи на обучение в тичер
      jobClass: ru.tilipod.quartz.job.DistributedTaskSendToTeacherJob
      jobDataMap:
        - pageSize: 20
      triggers:
        - name: DistributedTaskSendToTeacherJobCronTrigger
          triggerType: CRON
          cronExpression: "0 * * ? * *"
          startTime:
          priority: 1
          startDelay: 0
    - name: TrainingTaskAgainSendToTeacherJob
      group: TEACHER
      description: Отправляет задачи на обучение в тичер
      jobClass: ru.tilipod.quartz.job.TrainingTaskAgainSendToTeacherJob
      jobDataMap:
        - pageSize: 20
      triggers:
        - name: TrainingTaskAgainSendToTeacherJobCronTrigger
          triggerType: CRON
          cronExpression: "0 * * ? * *"
          startTime:
          priority: 1
          startDelay: 0

feign:
  client:
    config:
      parser:
        name: parser
      distributor:
        name: distributor
      teacher:
        name: teacher

commonPathToDataset: ${COMMON_PATH_TO_DATASET:C:/2NEAS-1/datasets/}
pathPattern: ${PATH_PATTERN:task-%d-%s}
commonPathToModel: ${COMMON_PATH_TO_MODEL:C:/2NEAS-1/models/}

queues:
  parserResultSuccess: "parserResultSuccess"
  parserResultError: "parserResultError"
  distributorResultSuccess: "distributorResultSuccess"
  distributorResultError: "distributorResultError"
  teacherResultSuccess: "teacherResultSuccess"
  teacherResultError: "teacherResultError"